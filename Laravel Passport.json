[[1581647029508,"h1","API Authentication (Passport)"],[1581647841252,"p","To get started, install Passport via the Composer package manager:"],[1581647841442,"html","composer require laravel/passport"],[1581647841617,"p","Passport migrations will create the tables your application needs to store clients and access tokens:"],[1581647841787,"javascript","php artisan migrate"],[1581647978727,"p","Next, you should run the passport:install command."],[1582881971472,"javascript","php artisan passport:install"],[1582881972017,"p","After running this command, add the Laravel\\Passport\\HasApiTokens trait to your App\\User model. This trait will provide a few helper methods to your model which allow you to inspect the authenticated user's token and scopes:"],[1582881972198,"javascript","namespace App;\nuse Laravel\\Passport\\HasApiTokens;\nuse Illuminate\\Notifications\\Notifiable;\nuse Illuminate\\Foundation\\Auth\\User as Authenticatable;\nclass User extends Authenticatable\n{\n    use HasApiTokens, Notifiable;\n    ...\n}"],[1582881972390,"p","app/Providers/AuthServiceProvider.php"],[1582881972547,"javascript","<?php\nnamespace App\\Providers;\nuse Illuminate\\Foundation\\Support\\Providers\\AuthServiceProvider as ServiceProvider;\nuse Illuminate\\Support\\Facades\\Gate;\nuse Laravel\\Passport\\Passport; // add this line\nclass AuthServiceProvider extends ServiceProvider\n{\n    protected $policies = [\n        'App\\Model' => 'App\\Policies\\ModelPolicy', // uncomment this line\n    ];\n    public function boot()\n    {\n        $this->registerPolicies();\n        Passport::routes(); // add this line\n    }\n}\n"],[1582881972721,"p","config/auth.php "],[1582881973065,"javascript","'guards' => [\n    'web' => [\n        'driver' => 'session',\n        'provider' => 'users',\n    ],\n\n    'api' => [\n        'driver' => 'passport', // change this line\n        'provider' => 'users',\n//      'hash' => false, // remove this line\n    ],\n],"],[1582881973250,"p","Open config/app.php file and add service provider."],[1582885205726,"javascript","return [\n    ...\n    'providers' =>[\n        ...\n        Laravel\\Passport\\PassportServiceProvider::class,\n    ],\n];"],[1582885206069,"p","Passport Configuration app/User.php"],[1582885206249,"javascript","<?php\nnamespace App;\nuse Illuminate\\Contracts\\Auth\\MustVerifyEmail;\nuse Illuminate\\Foundation\\Auth\\User as Authenticatable;\nuse Illuminate\\Notifications\\Notifiable;\nuse Laravel\\Passport\\HasApiTokens; // add this line\nclass User extends Authenticatable\n{\n    use HasApiTokens, Notifiable; // add HasApiTokens\n    protected $fillable = [\n        'name', 'email', 'password',\n    ];\n    protected $hidden = [\n        'password', 'remember_token',\n    ];\n    protected $casts = [\n        'email_verified_at' => 'datetime',\n    ];\n}\n"],[1582885206444,"p","routes/api.php"],[1582885206627,"javascript","Route::post('login', 'API\\UserController@login');\nRoute::post('register', 'API\\UserController@register');\n\nRoute::group(['middleware' => 'auth:api'], function(){\n    Route::post('details', 'API\\UserController@details');\n});"],[1582885374804,"p","Create UserController"],[1582885375262,"javascript","php artisan make:controller UserController"],[1582885375458,"p","Then Create login, register and details methods."],[1582885375649,"javascript","<?php\nnamespace App\\Http\\Controllers\\API;\nuse Illuminate\\Http\\Request; \nuse App\\Http\\Controllers\\Controller; \nuse App\\User; \nuse Illuminate\\Support\\Facades\\Auth; \nuse Validator;\nclass UserController extends Controller\n{\n    public $successStatus = 200;\n    public function login(){ \n        if(Auth::attempt(['email' => request('email'), 'password' => request('password')])){ \n            $user = Auth::user(); \n            $success['token'] =  $user->createToken('MyApp')-> accessToken; \n            return response()->json(['success' => $success], $this->successStatus); \n        } \n        else{ \n            return response()->json(['error'=>'Unauthorised'], 401); \n        } \n    }\n    public function register(Request $request) \n    { \n        $validator = Validator::make($request->all(), [ \n            'name' => 'required', \n            'email' => 'required|email', \n            'password' => 'required', \n            'c_password' => 'required|same:password', \n        ]);\n        if ($validator->fails()) { \n            return response()->json(['error'=>$validator->errors()], 401);            \n        }\n        $input = $request->all(); \n        $input['password'] = bcrypt($input['password']); \n        $user = User::create($input); \n        $success['token'] =  $user->createToken('MyApp')->accessToken; \n        $success['name'] =  $user->name;\n        return response()->json(['success'=>$success], $this->successStatus); \n    }\n    public function details() \n    { \n        $user = Auth::user(); \n        return response()->json(['success' => $user], $this->successStatus); \n    } \n}\n"],[1582885376766,"p","Test the app using a consumer RestFul API"],[1582890181913,"javascript","REQUEST\nPOST localhost/api/register \nBody:\n    name \"jhon\"\n    email \"jhon@mail.com\"\n    password \"secret\"\n    c_password \"secret\"\n\nRESPONSE\n{\n    \"success\": {\n        \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI...\",\n        \"name\": \"jhon\"\n    }\n}"],[1582889946316,"javascript","REQUEST\nPOST localhost/api/login\nBody:\n    email \"jhon@mail.com\"\n    password \"secret\"\n\nRESPONSE\n{\n    \"success\": {\n        \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI...\"\n    }\n}"],[1582885376965,"javascript","REQUEST\nPOST localhost/api/details\nHeader:\n    Authorization \"Bearer eyJ0eXAiOiJKV1QiLCJhbG...\"\n    Accept \"application/json\"\n\nRESPONSE\n{\n    \"success\": {\n        \"id\": 1,\n        \"name\": \"jhon\",\n        \"email\": \"jhon@mail.com\",\n        \"email_verified_at\": null,\n        \"created_at\": \"2020-02-28 10:51:51\",\n        \"updated_at\": \"2020-02-28 10:51:51\"\n    }\n}"],[1582890823010,"p","More information in"],[1581647029211,"javascript","https://laravel.com/docs/6.x/passport"]]